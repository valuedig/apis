// Copyright 2020 Eryx <evorui аt gmail dοt com>, All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//  http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package valuedig.tsd.v2;

option optimize_for = LITE_RUNTIME;
option go_package = ".;tsd";

enum MetricType {
  UNTYPED = 0;
  GAUGE = 1;
  DELTA = 2;
}

message MetricSet {
  repeated int64 time_buckets = 4;
  repeated Metric metrics = 5;
  repeated MetricFamily families = 6;
  message Status {
    int64 alignment_period = 3;
  }
  Status status = 7;
}

message MetricFamily {
  string name = 1;
  repeated Metric metrics = 5;
  string unit = 6;
}

message MetricLabel {
  string name = 1;
  string value = 2;
}

message Metric {
  string name = 1;
  MetricType type = 2;
  repeated MetricLabel labels = 3;
  repeated MetricPoint points = 4;
  string description = 5;
  string unit = 6;
}

message MetricPoint {
  int64 count = 1;
  int64 sum = 2;
  int64 value = 3;
  int64 time = 4;
}

message SampleQueryRequest {
  int64 alignment_period = 3;
  int64 last_time_range = 4;
  int64 start_time = 5;
  int64 end_time = 6;
  message Metric {
    MetricType type = 2;
    map<string, string> labels = 5;
  }
  map<string, Metric> metrics = 7;
}

/**
message HistogramValue {
  int64 count = 1;
  float sum = 2;
  message Bucket {
    int64 count = 1;
    float sum = 2;
    float upper_bound = 3;
  }
  repeated Bucket bucket = 3;
}

message SummaryValue {
  int64 count = 1;
  float sum = 2;
  message Quantile {
    int64 count = 1;
    float sum = 2;
    float quantile = 3;
    float value = 4;
  }
  repeated Quantile quantile = 3;
}
*/
